[
  {
    "id": "Robust_Adaptive_MPC",
    "title": "Robust Adaptive MPC",
    "description": "Adaptive Model Predictive Control with statistical guarantees in noisy settings.",
    "fullDescription": "Implements an adaptive MPC controller using MATLAB/Python with noise‑robust performance for autonomous systems.",
    "tags": ["MPC", "Adaptive-Control", "Control", "MATLAB", "Deep Learning"],
    "link": "https://github.com/Muckthebuck/Robust_Adaptive_MPC",
    "githubLink": "https://github.com/Muckthebuck/Robust_Adaptive_MPC"
  },
  {
    "id": "Sokoban-Solver-in-C",
    "title": "Sokoban Solver in C",
    "description": "A Sokoban puzzle solver implementing freeze‑deadlock detection in C.",
    "fullDescription": "C implementation of Sokoban solver using heuristic search and freeze‑deadlock detection to solve levels efficiently.",
    "tags": ["DFS", "Deadlock", "C"],
    "link": "https://github.com/Muckthebuck/Sokoban-Solver-in-C",
    "githubLink": "https://github.com/Muckthebuck/Sokoban-Solver-in-C"
  },
  {
    "id": "AI_PA",
    "title": "AI_PA (Game Search Agent)",
    "description": "A* search algorithm implementation for game agents.",
    "fullDescription": "An AI project implementing search algorithms for game agents with heuristic optimizations.",
    "tags": ["Python", "A*"],
    "link": "https://github.com/Muckthebuck/AI_PA",
    "githubLink": "https://github.com/Muckthebuck/AI_PA"
  },
  {
    "id": "ESI_Project",
    "title": "Study Buddy",
    "description": "Arduino-based time management device using Pomodoro techniques.",
    "fullDescription": "A modular Arduino system integrating timer, LED matrix, buzzer and sensors to create a smart study buddy.",
    "tags": ["Arduino", "Embedded", "Hardware", "C++", "CAD"],
    "link": "https://github.com/Muckthebuck/ESI_Project",
    "githubLink": "https://github.com/Muckthebuck/ESI_Project"
  },
  {
    "id": "PointNet",
    "title": "PointNet Implementation",
    "description": "Reimplementation of the PointNet architecture for point cloud classification.",
    "fullDescription": "Clean from‑scratch implementation of PointNet with Python and PyTorch, maintaining permutation invariance and max‑pooling.",
    "tags": ["Python", "Deep Learning", "Point Cloud", "Pytorch", "Classification", "Segmentation", "3D Deep Learning"],
    "link": "https://github.com/Muckthebuck/PointNet",
    "githubLink": "https://github.com/Muckthebuck/PointNet"
  }
]
